<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <title>GREENSCAN</title>
        <link rel="stylesheet" type="text/css" href="main.css" />
        <script
            type="text/javascript"
            src="//dapi.kakao.com/v2/maps/sdk.js?appkey=bccff766b287d99acdbb7ef9827b3ad2"
        ></script>
    </head>
    <body>
        <header>
            <div>
                <a href="/">GREENSCAN</a>
            </div>
        </header>
        <nav>
            <a class="nav_bar" href="/barcode">BARCODE SCAN</a>
            <a class="nav_search" href="/search">SEARCH</a>
            <a class="nav_map" href="/map">MAP</a>
        </nav>
        <div class="main_content">
            <h3 class="current_page">GREEN STORE MAP</h3>
            <p></p>
            <div id="map"></div>
        </div>
        <script type="text/javascript">
            let mapOption = {
                center: new kakao.maps.LatLng(37.5646, 126.9374),
                level: 3,
            };
            let map = new kakao.maps.Map(
                document.getElementById("map"),
                mapOption
            );
            let zoomControl = new kakao.maps.ZoomControl();
            map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

            let coords = [];
            let markers = [];
            fetch("latlon.json")
                .then((res) => {
                    return res.json();
                })
                .then((data) => {
                    for (let i = 0; i < data.length; i++) {
                        let lat = data[i].위도;
                        let lng = data[i].경도;
                        let locPosition = new kakao.maps.LatLng(lat, lng);
                        let infowindow = new kakao.maps.InfoWindow({
                            content: `<div style="padding: 5px;">${data[i].업체명} ${data[i].매장명}</div>`,
                        });
                        let marker = new kakao.maps.Marker({
                            position: locPosition,
                            clickable: true,
                        });
                        coords.push([lat, lng]);
                        kakao.maps.event.addListener(
                            marker,
                            "mouseover",
                            makeOverListener(map, marker, infowindow)
                        );
                        kakao.maps.event.addListener(
                            marker,
                            "mouseout",
                            makeOutListener(infowindow)
                        );
                        markers.push(marker);
                    }
                });

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    let lat = position.coords.latitude;
                    let lon = position.coords.longitude;
                    let locPosition = new kakao.maps.LatLng(lat, lon);
                    let marker = new kakao.maps.Marker({
                        map: map,
                        position: locPosition,
                    });
                    let infowindow = new kakao.maps.InfoWindow({
                        content: '<div style="padding: 5px;">사용자 위치</div>',
                        removable: true,
                    });
                    infowindow.open(map, marker);
                    map.setCenter(locPosition);
                });
            }
            kakao.maps.event.addListener(map, "zoom_changed", showMarker);
            kakao.maps.event.addListener(map, "dragend", showMarker);

            function makeOverListener(map, marker, infowindow) {
                return function () {
                    infowindow.open(map, marker);
                };
            }
            function makeOutListener(infowindow) {
                return function () {
                    infowindow.close();
                };
            }
            function showMarker() {
                let bounds = map.getBounds();
                let swLatLng = bounds.getSouthWest();
                let neLatLng = bounds.getNorthEast();
                let swlat = swLatLng.getLat();
                let swlng = swLatLng.getLng();
                let nelat = neLatLng.getLat();
                let nelng = neLatLng.getLng();
                for (let i = 0; i < markers.length; i++) {
                    let lat = coords[i][0];
                    let lng = coords[i][1];
                    if (
                        swlat < lat &&
                        lat < nelat &&
                        swlng < lng &&
                        lng < nelng
                    )
                        markers[i].setMap(map);
                    else markers[i].setMap(null);
                }
            }
        </script>
    </body>
</html>
